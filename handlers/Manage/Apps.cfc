component output="false" singleton{	function preHandler(event,rc,prc,action) {		prc.user = getModel('UserService').get( getPlugin('SessionStorage').getVar('user').id );	}	public void function index(event,rc,prc){		var AppService = getModel('AppService');		rc.apps = AppService.list(orderBy='name asc',criteria={User=prc.user},asQuery=false);		event.setView("manage/apps/index");	}	public void function saveapp(event,rc,prc) {		var AppService = getModel('AppService');				var result = {};		result['succes'] = true;		result['errors'] = [];				var App = ( AppService.appExistsByUser(event.getValue('id',''),prc.user.getid()) ? AppService.getAppByUser(event.getValue('id',''),prc.user.getid()) : AppService.new() );				if( isBoolean(Event.getValue('delete',false)) && Event.getValue('delete',false) eq true ) {			AppService.delete( App );			result['delete'] = true;			event.renderData(data=result,type='json');			return;
		}				populateModel( model=App, exclude='id,appid' );		if( !App.hasUser() ) {			App.setUser( prc.user );
		}		prc.validationResults = validateModel( App );		if( prc.validationResults.hasErrors() ) {			result['succes'] = false;			result['errors'] = prc.validationResults.getAllErrorsAsStruct();		} else {			AppService.save(App);			EntityReload(App);			result['app'] = App.toJSON();		}		event.renderData(data=result,type='json');
	}		public void function savesettings(event,rc,prc) {		var AppSettingService = getModel('AppSettingService');		var AppService = getModel('AppService');		var result = {};		if( AppService.appExistsByUser(event.getValue('id',''),prc.user.getid()) ) {			var App = AppService.getAppByUser(event.getValue('id',''),prc.user.getid());			AppSettingService.saveSettings(App=App,Settings=rc.appsettings);			result.app = App.toJSON();
		}		event.renderData(data=result,type='json');
	}		public void function delete(event,rc,prc) {		var SettingService = getModel('SettingService');		if( len(trim(Event.getValue('key',''))) ) {			SettingService.delete( SettingService.get(rc.key) );		}		event.renderData(data=true,type='json');
	}	}