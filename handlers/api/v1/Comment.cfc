component output="false" extends="baseAPI" singleton {	this.Event_cache_suffix = "";	this.prehandler_only = "";	this.prehandler_except = "";	this.posthandler_only = "";	this.posthandler_except = "";	this.aroundHandler_only = "";	this.aroundHandler_except = "";	this.allowedMethods = {};	function preHandler(event,rc,prc,action){		super.preHandler(argumentCollection=arguments);	}	function postHandler(event,rc,prc,action){		super.postHandler(argumentCollection=arguments);	}	function onError(event,rc,prc,faultAction,exception){		super.onError(argumentCollection=arguments);	}		public void function get(event,rc,prc) {		var CommentService = getModel('CommentService');				var id = event.getValue('id',0);				var Comment = CommentService.get( rc.id );				if( Comment.hasLog() && Comment.getLog().hasUser() && Comment.getLog().getUser().getID() eq rc.User.getID() ) {			prc.response.data.results = Comment.toJSON();
		} else {			throw(message="Couldn't find Comment###id# that belongs to requested apiKey", type="CommentAPI.Unauthorized");
		}
	}}