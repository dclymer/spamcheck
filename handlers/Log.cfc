component output="false" singleton{	public void function index(event,rc,prc){		var LogSearchService = getModel('LogSearchService');		Event.paramValue('page',1);		Event.paramValue('sortorder','created desc');		Event.paramValue('keyword','');		Event.paramValue('createdafter','');		Event.paramValue('createdbefore','');		Event.paramValue('per_page',20);				rc.Paging		= getMyPlugin('Paging');		rc.Paging.setPagingBandGap( 8 );		rc.Paging.setPagingMaxRows( rc.per_page );		rc.boundaries	= rc.Paging.getBoundaries();		rc.offset		= rc.boundaries.startrow-1;		rc.max			= rc.Paging.getPagingMaxRows();		rc.Logs = LogSearchService.search(argumentCollection=rc);					event.setView("log/index");	}	public void function infowin(event,rc,prc) {		rc.Log = getModel('LogService').get( event.getValue('id',0) );		event.setView(view="log/infowin",layout="Ajax");
	}	public void function submissionswin(event,rc,prc) {		rc.Log = getModel('LogService').get( event.getValue('id',0) );		rc.Submissions = [];		if( rc.Log.hasSubmission() ) {			rc.Submissions = rc.Log.getSubmissions();
		}		event.setView(view="log/submissionswin",layout="Ajax");	}	public void function log_tr(event,rc,prc) {		rc.Log = getModel('LogService').get( event.getValue('id',0) );		//EntityReload(rc.Log);		event.setView(view="log/log_tr",layout="Ajax");	}}